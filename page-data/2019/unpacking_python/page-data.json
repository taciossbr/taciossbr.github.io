{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/unpacking_python/","result":{"data":{"site":{"siteMetadata":{"title":"Tacio S. S."}},"markdownRemark":{"id":"db4a2f9e-7e69-5e2b-a699-c85dbea259fa","excerpt":"Um dos exercícios mais comuns nas aulas básicas de programação é sem dúvida\nalguma o de trocar os valores das variáveis  e . Mas se a linguagem for Python…","html":"<p>Um dos exercícios mais comuns nas aulas básicas de programação é sem dúvida\nalguma o de trocar os valores das variáveis <code class=\"language-text\">a</code> e <code class=\"language-text\">b</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Codigo classico em linguagem c</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    a <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n    b <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Mas se a linguagem for Python, existe uma outra maneira:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\na<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a</code></pre></div>\n<p>Ok até agora não tivemos muitas novidades, provavelmente você já viu isso em\nalgum lugar. Mas neste post eu vou apresentar mais\nalgumas possibilidades deste <strong>desempacotamento</strong> do Python!</p>\n<h2>Desempacotamento com Python</h2>\n<p>Algo que eu faço muito resolvendo exercícios do\n<a href=\"https://www.urionlinejudge.com.br\">URI</a> é ler a linha dar um <code class=\"language-text\">split</code> na linha\ne converter todos os elementos para um tipo especifico, geralmente <code class=\"language-text\">int</code>.</p>\n<p>Claro que podemos fazer isso de várias formas, por exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">linha <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\na <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>linha<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>linha<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>linha<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nd <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>linha<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Esse exemplo funcionaria, mas seria extremamente lento de se escrever isso se\ntivermos várias variáveis diferentes na linha, então hoje eu uso muito, mas\nmuito mesmo essa solução com list-comprehensions:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>De cinco linhas para uma até que nos livramos de uma boa parte de código\nrepetitivo!</p>\n<h2>Melhorando a legibilidade do código</h2>\n<p>Agora vamos a um exemplo menos bobinho, e também com menos cara de exercício\nde programação, sem unpacking:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">curso <span class=\"token operator\">=</span> get_curso_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nome:\"</span><span class=\"token punctuation\">,</span> curso<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Coordenador:\"</span><span class=\"token punctuation\">,</span> curso<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Data de Inicio:\"</span><span class=\"token punctuation\">,</span> curso<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Descrição:\"</span><span class=\"token punctuation\">,</span> curso<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>A função <code class=\"language-text\">get_curso_by_id()</code> retorna uma tupla com: id, nome, descrição,\ncoordenador, data de inicio. Referenciar estes campos por seu índices é\numa solução feia que permite muitos erros. Então vamos deixar este código mais\nlegível com desempacotamento:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">id_curso<span class=\"token punctuation\">,</span> nome<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">,</span> coordenador<span class=\"token punctuation\">,</span> dt_inicio <span class=\"token operator\">=</span> get_curso_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nome:\"</span><span class=\"token punctuation\">,</span> nome<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Coordenador:\"</span><span class=\"token punctuation\">,</span> coordenador<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Data de Inicio:\"</span><span class=\"token punctuation\">,</span> dt_inicio<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Descrição:\"</span><span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Muito mais legível!</p>\n<p>Agora vamos dizer que a data retorna também uma tupla com anos, mês e dia. Para\nseparar esses valores também nos poderíamos fazer o seguinte:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">id_curso<span class=\"token punctuation\">,</span> nome<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">,</span> coordenador<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ano<span class=\"token punctuation\">,</span> mes<span class=\"token punctuation\">,</span> dia<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> get_curso_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nome:\"</span><span class=\"token punctuation\">,</span> nome<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Coordenador:\"</span><span class=\"token punctuation\">,</span> coordenador<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Data de Inicio:\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"{}/{}/{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>dia<span class=\"token punctuation\">,</span> mes<span class=\"token punctuation\">,</span> ano<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Descrição:\"</span><span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Ignorando valores</h2>\n<p>Agora vamos dizer que você precisa apenas do nome do curso e do coordenador,\no Python não possui nenhuma sintaxe específica pra isso, mas você pode\nsimplesmente atribuir esses campos para uma variável aleatória, como <code class=\"language-text\">_</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">_<span class=\"token punctuation\">,</span> nome<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> coordenador<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> get_curso_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Desempacotando valores de iteráveis de tamanho variável</h2>\n<p>Tudo isso e muito bonito mas é no caso de iteráveis que eu não sei exatamente o\ntamanho? É agora que entram as <code class=\"language-text\">*</code> no Python, mas acalme-se meu jovem\ntraumatizado pelos ponteiros de C essa estrelinha não tem nenhuma relação com\neles.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> aluno\n<span class=\"token punctuation\">(</span><span class=\"token string\">'João'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'joao@bol.com.br'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'(11) 93233-32323'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'(11) 93233-3863'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'(11) 98603-32323'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> nome<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>telefones\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> nome\n<span class=\"token string\">'João'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> email\n<span class=\"token string\">'joao@bol.com.br'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> telefones\n<span class=\"token punctuation\">[</span><span class=\"token string\">'(11) 93233-32323'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'(11) 93233-3863'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'(11) 98603-32323'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Em detalhes: <code class=\"language-text\">nome</code> e <code class=\"language-text\">email</code> receberam os dois primeiros elementos, e\n<code class=\"language-text\">telefones</code> recebeu todo o resto.</p>\n<p>E claro que as ‘estrelinhas’ não servem só pra desempacotar os últimos\nelementos: elas podem estar no meio, no incio e no fim da expressões de\ndesempacotamento.</p>\n<p>A única exigência e que exista apenas um ‘valor estrelado’ na expressão:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> l\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>d <span class=\"token operator\">=</span> l\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\nSyntaxError<span class=\"token punctuation\">:</span> two starred expressions <span class=\"token keyword\">in</span> assignment\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n<h2>Passando um iterável ou dicionário como argumentos de uma função</h2>\n<p>Essa talvez você já tenha visto em algum lugar:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> z<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> x<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n<p>E aí, o que achou dessa forma de desempacotar dados com o Python?</p>","frontmatter":{"title":"Entenda o desempacotamento do Python","date":"February 04, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019/unpacking_python/","previous":null,"next":{"fields":{"slug":"/2019/tipos_placa_rede_vbox/"},"frontmatter":{"title":"Tipos de placas de rede no VirtualBox"}}}}}